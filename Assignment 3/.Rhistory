linearData
LinearData
fit <- lm(Yield..yi. ~ Observation.Number  + Factor.1..xi1. + Factor.2..xi2., data=LinearData)
summary(fit) # show results
library(XLConnect)
loan<- readWorksheetFromFile("Desktop/loan.xlsx", sheet = 1)
loan
LogitModel<- glm(Decision ~ (Res_status + Occupation + Job_status + Liab_ref, Acc_ref), data=loan)
#Show Results
summary(LogitModel)
LogitModel<- glm(Decision ~ Res_status + Occupation + Job_status + Liab_ref, Acc_ref, data=loan)
summary(LogitModel)
library(XLConnect)
loan<- readWorksheetFromFile("Desktop/loan.xlsx", sheet = 1)
loan
library(XLConnect)
loan<- readWorksheetFromFile("Desktop/loan.xlsx", sheet = 1)
loan
str(loan)
LogitModel<- glm(Decision ~ Res_status + Occupation + Job_status + Liab_ref, Acc_ref, data=loan)
LogitModel<- glm(Decision ~ Res_status + Occupation + Job_status + Liab_ref + Acc_ref, data=loan)
library(XLConnect)
LinearData<- readWorksheetFromFile("Desktop/LinearData.xlsx", sheet = 1)
LinearData
LinearModel <- lm(Yield..yi. ~ Observation.Number  + Factor.1..xi1. + Factor.2..xi2., data=LinearData)
summary(LinearModel)
LinearModel <- lm(Yield..yi. ~ Factor.1..xi1. + Factor.2..xi2., data=LinearData)
glfit<-glm(y~x, family = 'binomial')
LinearModel <- lm(Yield..yi. ~ Factor.1..xi1. + Factor.2..xi2., data=LinearData)
LinearModel <- lm(Yield..yi. ~ Factor.1..xi1. + Factor.2..xi2., data=LinearData)
summary(LinearModel)
library(XLConnect)
loan<- readWorksheetFromFile("Desktop/loan.xlsx", sheet = 1)
loan
LogitModel<- glm(Decision ~ Res_status + Occupation + Job_status + Liab_ref + Acc_ref, data=loan)
loan$Decision= as.factor(loan$Decision)
contrasts(loan$Decision)
LogitModel<- glm(Decision ~ Res_status + Occupation + Job_status + Liab_ref + Acc_ref, data=loan)
loan$Decision= as.factor(loan$Decision)
contrasts(loan$Decision)
loan$Decision= as.factor(loan$Res_status)
contrasts(loan$Res_status)
loan$Decision= as.factor(loan$Occupation)
contrasts(loan$Occupation)
loan$Decision= as.factor(loan$Job_status)
contrasts(loan$Job_status)
loan$Decision= as.factor(loan$Liab_ref)
contrasts(loan$Liab_ref)
loan$Decision= as.factor(loan$Acc_ref)
contrasts(loan$Acc_ref)
loan$Decision= as.factor(loan$Decision)
contrasts(loan$Decision)
loan$Decision= as.factor(loan$Res_status)
contrasts(loan$Res_status)
loan$Decision= as.factor(loan$Decision)
contrasts(loan$Decision)
loan$Res_status= as.factor(loan$Res_status)
contrasts(loan$Res_status)
loan$Occupation= as.factor(loan$Occupation)
contrasts(loan$Occupation)
loan$Job_status= as.factor(loan$Job_status)
contrasts(loan$Job_status)
loan$Liab_ref= as.factor(loan$Liab_ref)
contrasts(loan$Liab_ref)
loan$Acc_ref= as.factor(loan$Acc_ref)
contrasts(loan$Acc_ref)
LogitModel<- glm(Decision ~ Res_status + Occupation + Job_status + Liab_ref + Acc_ref, data=loan)
View(loan)
View(loan)
loan$Acc_ref= as.factor(loan$Acc_ref)
contrasts(loan$Acc_ref)
LogitModel<- glm(Decision ~ Res_status + Occupation + Job_status + Liab_ref + Acc_ref, data=loan)
loan$Decision= as.factor(loan$Decision)
contrasts(loan$Decision)
loan$Decision= as.factor(loan$Decision)
contrasts(loan$Decision)
library(XLConnect)
loan<- readWorksheetFromFile("Desktop/loan.xlsx", sheet = 1)
loan
loan$Decision= as.factor(loan$Decision)
contrasts(loan$Decision)
loan$Res_status= as.factor(loan$Res_status)
contrasts(loan$Res_status)
loan$Occupation= as.factor(loan$Occupation)
contrasts(loan$Occupation)
loan$Job_status= as.factor(loan$Job_status)
contrasts(loan$Job_status)
loan$Liab_ref= as.factor(loan$Liab_ref)
contrasts(loan$Liab_ref)
loan$Acc_ref= as.factor(loan$Acc_ref)
contrasts(loan$Acc_ref)
LogitModel<- glm(Decision ~ Res_status + Occupation + Job_status + Liab_ref + Acc_ref, data=loan, family = "binomial")
summary(LogitModel)
DF1 = data.frame(wt = 2.1, disp = 180)
DF1
DF1 = data.frame()
DF1
predict(LogitModel, DF1, type="response")
predict(LogitModel, DF1, type="owner")
predict(LogitModel, owner, creative_, governmen, type="response")
DF1 = data.frame(owner, creative_, governmen, f, given)
DF1
DF2 = data.frame(rent, creative_, governmen, f, given)
DF2
DF1 = data.frame(owner, creative_, governmen, f, given)
DF1
DF1 = data.frame(Res_status = "owner", Occupation = "creative_", Job_status = "governmen", Liab_ref = "f", Acc_ref = "given")
DF1
DF2 = data.frame(Res_status = "rent", Occupation = "creative_", Job_status = "governmen", Liab_ref = "f", Acc_ref = "given")
DF2
#Prediction for input (owner, creative_, governmen, f, given):
predict(LogitModel, DF1, type="response")
#Prediction for input (rent, creative_, governmen, f, given):
predict(LogitModel, DF2, type="response")
Predict1 = predict(LogitModel, DF1, type="response")
Predict1
#Prediction for input (rent, creative_, governmen, f, given):
Predict2 = predict(LogitModel, DF2, type="response")
Predict2
LinearData
Y = matrix( + c(251.3, 251.3, 248.3, 267.5, 273.0, 276.5, 270.3, 274.9, 285.0, 290.0, 297.0, 302.5, 304.5, 309.3, 321.7, 330.7, 349.0), ncol = 1)
y = matrix( + c(251.3, 251.3, 248.3, 267.5, 273.0, 276.5, 270.3, 274.9, 285.0, 290.0, 297.0, 302.5, 304.5, 309.3, 321.7, 330.7, 349.0), ncol = 1)
y
y = matrix(c(251.3, 251.3, 248.3, 267.5, 273.0, 276.5, 270.3, 274.9, 285.0, 290.0, 297.0, 302.5, 304.5, 309.3, 321.7, 330.7, 349.0), ncol = 1)
y
LinearData
X = matrix(c(41.9, 29.1), + ncol=2)
X = matrix(c(41.9, 29.1, 43.4, 29.3), + ncol=2)
X = matrix(c(41.9, 29.1, 43.4, 29.3), + ncol=2)
X
y = matrix(c(251.3, 251.3, 248.3, 267.5, 273.0, 276.5, 270.3, 274.9, 285.0, 290.0, 297.0, 302.5, 304.5, 309.3, 321.7, 330.7, 349.0), ncol = 1)
y
X = matrix(c(41.9, 29.1, 43.4, 29.3), + ncol=2)
X = matrix(c(41.9, 29.1, 43.4, 29.3) + ncol=2)
X = matrix(c(41.9, 29.1, 43.4, 29.3),  ncol = 2)
X
X = matrix(c(41.9, 43.4, 29.3),  ncol = 2)
X
X = matrix(c(0, 1, 2, 3),  ncol = 2)
X
LinearData
X = matrix(c(41.9, 43.4, 43.9, 44.5, 47.3, 47.5, 47.9, 50.2, 52.8, 53.2, 56.7, 57.0, 63.5, 65.3, 71.1,77.0,77.8
29.1, 29.3, 29.5, 29.7, 29.9, 30.3, 30.5, 30.7, 30.8, 30.9, 31.5, 31.7, 31.9, 32.0, 32.1, 32.5, 32.9),  ncol = 2)
X = matrix(c(41.9, 43.4, 43.9, 44.5, 47.3, 47.5, 47.9, 50.2, 52.8, 53.2, 56.7, 57.0, 63.5, 65.3, 71.1,77.0,77.8,
29.1, 29.3, 29.5, 29.7, 29.9, 30.3, 30.5, 30.7, 30.8, 30.9, 31.5, 31.7, 31.9, 32.0, 32.1, 32.5, 32.9),  ncol = 2)
X
LSE <- (t(X)*X)^-1*t(X)*y
LSE
LSE <- (t(X)%*%X)^-1%*%t(X)%*%y
LSE
y
LSE <- (t(X)%*%X)^-1%*%t(X)%*%y
LSE
X <- matrix(c(1, 1, 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,141.9, 43.4, 43.9, 44.5, 47.3, 47.5, 47.9, 50.2, 52.8, 53.2, 56.7, 57.0, 63.5, 65.3, 71.1,77.0,77.8,
29.1, 29.3, 29.5, 29.7, 29.9, 30.3, 30.5, 30.7, 30.8, 30.9, 31.5, 31.7, 31.9, 32.0, 32.1, 32.5, 32.9),  ncol = 2)
X
X <- matrix(c(1, 1, 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,41.9, 43.4, 43.9, 44.5, 47.3, 47.5, 47.9, 50.2, 52.8, 53.2, 56.7, 57.0, 63.5, 65.3, 71.1,77.0,77.8,
29.1, 29.3, 29.5, 29.7, 29.9, 30.3, 30.5, 30.7, 30.8, 30.9, 31.5, 31.7, 31.9, 32.0, 32.1, 32.5, 32.9),  ncol = 2)
X
X <- matrix(c(1, 1, 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,41.9, 43.4, 43.9, 44.5, 47.3, 47.5, 47.9, 50.2, 52.8, 53.2, 56.7, 57.0, 63.5, 65.3, 71.1,77.0,77.8,
29.1, 29.3, 29.5, 29.7, 29.9, 30.3, 30.5, 30.7, 30.8, 30.9, 31.5, 31.7, 31.9, 32.0, 32.1, 32.5, 32.9),  ncol = 3)
X
LSE <- (t(X)%*%X)^-1%*%t(X)%*%y
LSE
X <- matrix(c(1, 1, 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,41.9, 43.4, 43.9, 44.5, 47.3, 47.5, 47.9, 50.2, 52.8, 53.2, 56.7, 57.0, 63.5, 65.3, 71.1,77.0,77.8,
29.1, 29.3, 29.5, 29.7, 29.9, 30.3, 30.5, 30.7, 30.8, 30.9, 31.5, 31.7, 31.9, 32.0, 32.1, 32.5, 32.9),  ncol = 3)
X
y <- matrix(c(251.3, 251.3, 248.3, 267.5, 273.0, 276.5, 270.3, 274.9, 285.0, 290.0, 297.0, 302.5, 304.5, 309.3, 321.7, 330.7, 349.0), ncol = 1)
y
try <- (t(X)%*%X)
try
try <- t(X)%*%y
try
try <- t(X)%*%y
try
LSE <- LSE1 * LSE2
LSE
LSE1 <- t(X)%*%y
LSE1
LSE2 <- (t(X)%*%X)^-1
LSE2
LSE1 <- (t(X)%*%X)^-1
LSE1
LSE2 <- t(X)%*%y
LSE2
LSE1 <- ((t(X)%*%X)^-1)
LSE1
LSE2 <- t(X)%*%y
LSE2
LSE1 <- (t(X)%*%X)^-1
LSE1
LSE1 <- (t(X)%*%X)
LSE1
LSE <- (t(X)%*%X)^-1%*%t(X)%*%y
LSE
LSE1 <- (t(X)%*%X)
LSE1
invLSE <- solve(LSE)
LSE2 <- t(X)%*%y
LSE2
LSE <- invLSE * LSE2
LSE
invLSE <- solve(LSE)
invLSE
invLSE <- solve(LSE1)
invLSE
LSE <- invLSE * LSE2
LSE
LSE <- invLSE%*%LSE2
LSE
FRM <- LSE[1,1] + LSE[2,1] + LSE[3,1]
FRM
FRM <- LSE[1,1] + LSE[2,1]%*%47.3 + LSE[3,1]%29.9
FRM
FRM <- LSE[1,1] + LSE[2,1]%*%47.3 + LSE[3,1]*29.9
FRM
FifthValue <- y[5,1]
FifthValue
RV <- FRM - FifthValue
RV
RV <- FifthValue - FRM
RV
FRM2 <- LSE[1,1] + LSE[2,1]%*%47 + LSE[3,1]*31
FRM2
J <- matrix(c(1, 1, 1), ncol = 1)
J <- matrix(c(1, 1, 1), ncol = 1)
J
H <- X%*%solve((t(X)%*%X))%*%t(X)
H
SSR <- solve(y)%*%(H-(1/17)J)y
SSR <- t(y)%*%(H-(1/17)%*%J)y
SSR
SSR <- t(y)%*%(H-(1%%17)%*%J)y
SSR
SSR <- t(y)%*%(H-(1%%17)%*%J)%*%y
SSR
SSR <- t(y)%*%(H-(1/17)%*%J)%*%y
SSR
SSR <- t(y)%*%(H-(1/17)%*%J)%*%y
SSR
SSR <- t(y)%*%(H-((1/17)%*%J))%*%y
SSR
SSR <- t(y)%*%(H-((1/17)*J))%*%y
SSR
try <- H-(1/17)*J
try
try <- t(y)%*%(H-(1/17)*J)
try
try <- t(y)%*%(H-(1/17)*J)*y
try
try <- t(y)%*%(H-(1/17)*J)%*%y
try <- t(y)%*%(H-(1/17)%*%J)%*%y
try
SSR <- t(y)%*%(H-(1/3)%*%J)%*%y
SSR <- t(y)%*%(H-(1/3)*J)%*%y
SSR
SSR <- t(y)%*%(H-(1/3)%*%J)%*%y
SSR
SSR <- t(y)%*%(H-(1/17)%*%J)%*%y
SSR
SSR <- t(y)%*%(H-(1/17)*J)%*%y
SSR
J
Jo
Jo <- matrix(1:1, 17, 17)
Jo
SSR <- t(y)%*%(H-(1/17)*J)%*%y
SSR
SSR <- t(y)%*%(H-((1/17)*J))%*%y
SSR
SSR <- t(y)%*%(H-J/17)%*%y
SSR
SSR <- t(y)%*%(H-(1/17)*J)%*%y
SSR
t(y)
H
J
J
J <- matrix(1:1, 17, 17)
J
SSR <- t(y)%*%(H-(1/17)*J)%*%y
SSR
MSR
MSR <- SSR / dof(SSR)
MSR
DegOfFreedom <- dof(SSR)
DegOfFreedom
DegOfFreedom <- df(SSR)
DegOfFreedom
DegOfFreedom <- df.residual(SSR)
DegOfFreedom
MSR <- SSR / 2
MSR
I <- diag(17)
I
SSE <- t(y)*(I - H)*y
SSE
SSE <- t(y)%*%(I - H)%*%y
SSE
MSE <- SSE/(n-(k+1))
MSE
F0 <- MSR/MSE
F0
MSE <- SSE%%(n-(k+1))
MSE
MSE <- SSE/(n-(k+1))
MSE
SSE
MSE <- SSE/14
MSE
F0 <- MSR/MSE
F0
Predict2
loan$Liab_ref= as.factor(loan$Liab_ref)
contrasts(loan$Liab_ref)
loan$Acc_ref= as.factor(loan$Acc_ref)
contrasts(loan$Acc_ref)
loan
loan$Decision= as.factor(loan$Decision)
contrasts(loan$Decision)
contrasts(loan$Decision)
summary(LogitModel)
Predict1 <- predict(LogitModel, DF1, type="response")
Predict1
#Prediction for input (rent, creative_, governmen, f, given):
Predict2 <- predict(LogitModel, DF2, type="response")
Predict2
DF1
#Prediction for input (owner, creative_, governmen, f, given):
Predict1 <- predict(LogitModel, DF1, type="response")
Predict1
#Prediction for input (rent, creative_, governmen, f, given):
Predict2 <- predict(LogitModel, DF2, type="response")
Predict2
f0 <- MSR/MSE
f0
#Prediction for input (owner, creative_, governmen, f, given):
Predict1 <- predict(LogitModel, DF1, type="response")
Predict1
#Prediction for input (rent, creative_, governmen, f, given):
Predict2 <- predict(LogitModel, DF2, type="response")
Predict2
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
library(XLConnectJars)
library(XLConnect)
library(rJava)
library(XLConnect)
loan<- readWorksheetFromFile("Desktop/loan.xlsx", sheet = 1)
loan
source('~/Assignment3.R')
source('~/Assignment3.R')
# Check if XLConnect is already installed:
any(grepl("XLConnect",
installed.packages()))
#If FALSE, install package XLConnect:
install.packages("XLConnectJars")
install.packages("XLConnect")
install.packages("rJava")
install.packages("rpart")
#or (used this)
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
library(XLConnectJars)
library(XLConnect)
library(rJava)
library(XLConnect)
titanic_train<- readWorksheetFromFile("Desktop/Titanic_train.csv", sheet = 1)
titanic_train
titanic_test<- readWorksheetFromFile("Desktop/Titanic_test.csv", sheet = 1)
titanic_test
titanic_train=read.csv("Desktop/Titanic_train.csv")
titanic_test=read.csv("Desktop/Titanic_test.csv")
titanic_test
titanic_train
library(rpart)
model.treedataset=rpart(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,data=trained_dataset,method="class")
prp(model.treedataset)
rpart.plot(model.treedataset)
model.treedataset=rpart(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,data=titanic_train,method="class")
prp(model.treedataset)
rpart.plot(model.treedataset)
library(rpart)
model.treedataset=rpart(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,data=titanic_train,method="class")
prp(model.treedataset)
rpart.plot(model.treedataset)
library(rpart)
model.treedataset=rpart(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,data=titanic_train,method="class")
prp(model.treedataset)
library(XLConnect)
titanic_train=read.csv("Desktop/Titanic_train.csv")
titanic_train
titanic_test=read.csv("Desktop/Titanic_test.csv")
titanic_test
model.treedataset=rpart(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,data=titanic_train, method="class")
model.treedataset
rpart.plot(tree_model)
?rpart
library(XLConnect)
energy_data = readWorksheetFromFile("Desktop/Energy_Efficiency.xlsx",sheet = 1)
energy_data
energy_data
energy_train
energy_train<-floor(0.8 * nrow(energy_data))
energy_train
set.seed(13)
train_ind<-sample(seq_len(nrow(energy_data)),size = energy_train)
train_ind
train_data = energy_data[train_ind,]
test_data = energy_data[-train_ind,]
test_data
train_data
premodel = rpart(Y2~ X1+X2+X3+X4+X5+X6+X7+X8,data = train_data, method="anova")
premodel1 = rpart(Y1~ X1+X2+X3+X4+X5+X6+X7+X8,data = train_data, method="anova")
premodel1
premodel
p1= predict(premodel,test_data,type = "vector")
p= predict(premodel1,test_data,type = "vector")
plot(p1,type='h',col="green",ylim=c(10,max(p1,p)))
train_data
lines(p,type='h',lty=2,col="red")
library(XLConnect)
titanic_train=read.csv("Desktop/Titanic_train.csv")
titanic_train
titanic_test=read.csv("Desktop/Titanic_test.csv")
titanic_test
library(rpart)
install.packages("rpart")
install.packages("rpart")
install.packages("rpart")
library("rpart", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages("rpart.plot")
install.packages("rpart")
tree_model=rpart(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked, data=titanic_train, method="class")
tree_model
prp(tree_model)
rpart.plot(tree_model)
install.packages("rpart.plot")
install.packages("Rcpp")
library(rpart)
library(rpart.plot)
tree_model=rpart(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked, data=titanic_train, method="class")
tree_model
prp(tree_model)
rpart.plot(tree_model)
Prediction_data <- predict(tree_model, train_test, type = "class")
Prediction_data <- predict(tree_model, titanic_test, type = "class")
submit_data <- data.frame(Name = test_dataset$Name, Survived = Prediction)
submit_data <- data.frame(Name = titanic_test$Name, Survived = Prediction)
submit_data <- data.frame(Name = titanic_test$Name, Survived = Prediction_data)
plot(Prediction_data,type='h',col="green",ylim=c(10,max(p1,p)))
lines(Prediction_data,type='h',lty=2,col="red")
library(XLConnect)
energy_data = readWorksheetFromFile("Desktop/Energy_Efficiency.xlsx",sheet = 1)
energy_data
energy_train<-floor(0.8 * nrow(energy_data))
set.seed(13)
train_ind<-sample(seq_len(nrow(energy_data)),size = energy_train)
train_ind
train_data = energy_data[train_ind,]
train_data
test_data = energy_data[-train_ind,]
test_data
premodel = rpart(Y2~ X1+X2+X3+X4+X5+X6+X7+X8, data = train_data, method="anova")
premodel
premodel1 = rpart(Y1~ X1+X2+X3+X4+X5+X6+X7+X8, data = train_data, method="anova")
premodel1
p1= predict(premodel,test_data,type = "vector")
p= predict(premodel1,test_data,type = "vector")
plot(p1,type='h',col="green",ylim=c(10,max(p1,p)))
lines(p,type='h',lty=2,col="red")
?rpart
?rpart.plot
?rpart
?prp
library(XLConnect)
energy_data = readWorksheetFromFile("Desktop/Energy_Efficiency.xlsx",sheet = 1)
energy_data
energy_train<-floor(0.8 * nrow(energy_data))
energy_train
set.seed(13)
train_ind<-sample(seq_len(nrow(energy_data)),size = energy_train)
train_ind
train_data = energy_data[train_ind,]
train_data
test_data = energy_data[-train_ind,]
test_data
modelY2 = rpart(Y2~ X1+X2+X3+X4+X5+X6+X7+X8, data = train_data, method="anova")
model
modelY2
model1Y1 = rpart(Y1~ X1+X2+X3+X4+X5+X6+X7+X8, data = train_data, method="anova")
modelY1
modelY1 = rpart(Y1~ X1+X2+X3+X4+X5+X6+X7+X8, data = train_data, method="anova")
modelY1
p1= predict(modelY2,test_data,type = "vector")
p= predict(modelY1,test_data,type = "vector")
plot(p1,type='h',col="green",ylim=c(10,max(p1,p)))
lines(p,type='h',lty=2,col="red")
library(XLConnect)
titanic_train=read.csv("Desktop/Titanic_train.csv")
titanic_train
titanic_test=read.csv("Desktop/Titanic_test.csv")
titanic_test
library(rpart)
library(rpart.plot)
tree_model=rpart(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked, data=titanic_train, method="class")
tree_model
prp(tree_model)
rpart.plot(tree_model)
prp(tree_model)
rpart.plot(tree_model)
plot(p1,type='h',col="green",ylim=c(10,max(p1,p)))
c
lines(p,type='h',lty=2,col="red")
